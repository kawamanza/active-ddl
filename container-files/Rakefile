#!usr/bin/env ruby

require 'rubygems'
require 'bundler/setup'
require 'erb'
require 'logger'

Bundler.setup(:default, ENV['RAILS_ENV'] || ENV['RACK_ENV'] || 'development')
Bundler.require

include ActiveRecord::Tasks

class Seeder
  def initialize(seed)
    @seed = seed
  end

  def load_seed
    raise "Seed file '#{@seed}' does not exist" unless File.file? @seed
    load @seed
  end
end

root = File.expand_path '..', __FILE__
DatabaseTasks.env = ENV['RAILS_ENV'] || ENV['RACK_ENV'] || 'development'
conf = File.join root, 'config/database.yml'
DatabaseTasks.database_configuration = YAML.load(ERB.new(File.read(conf)).result)
DatabaseTasks.db_dir = File.join root, 'db'
DatabaseTasks.fixtures_path = File.join root, 'test/fixtures'
DatabaseTasks.migrations_paths = [File.join(root, 'db/migrate')]
DatabaseTasks.seed_loader = Seeder.new File.join root, 'db/seeds.rb'
DatabaseTasks.root = root

task :environment do
  ActiveRecord::Base.configurations = DatabaseTasks.database_configuration
  ActiveRecord::Base.establish_connection DatabaseTasks.env.to_sym
  ActiveRecord::Base.logger = Logger.new(STDOUT) if %w[development test].member?(DatabaseTasks.env)
end

ActiveSupport::Dependencies.autoload_paths += %w[
  app/models
]

load 'active_record/railties/databases.rake'
Rake.add_rakelib File.join root, 'tasks'
